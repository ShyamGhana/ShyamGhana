#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

int main()
{
    pid_t pid;
    pid = fork();
    
    if (pid < 0)
    {
        printf("fork failed to create child process\n");
        exit(1);  // Exit with error status
    }
    else if (pid == 0)
    {
        // Child process
        printf("child process: pid = %d, parent pid = %d\n", getpid(), getppid());
        sleep(3);  // Sleep for 3 seconds
        execl("/bin/ls", "ls", "-l", (char*)NULL);
        
        // If execl returns, it means it failed
        perror("execl failed");
        exit(1);
    }
    else
    {
        // Parent process
        printf("parent process: pid = %d, child pid = %d\n", getpid(),getppid());
        wait(NULL);  // Wait for child to complete
    }
    
    return 0;
}

OUTPUT :
parent process: pid = 129413, child pid = 129406
child process: pid = 129414, parent pid = 129413
total 0
